"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("source-map-support/register");
var _appiumAndroidDriver = require("appium-android-driver");
let uiautomatorCapConstraints = {
  app: {
    isString: true
  },
  automationName: {
    isString: true
  },
  browserName: {
    isString: true
  },
  launchTimeout: {
    isNumber: true
  },
  skipUnlock: {
    isBoolean: true
  },
  uiautomator2ServerLaunchTimeout: {
    isNumber: true
  },
  uiautomator2ServerInstallTimeout: {
    isNumber: true
  },
  uiautomator2ServerReadTimeout: {
    isNumber: true
  },
  disableWindowAnimation: {
    isBoolean: true
  },
  systemPort: {
    isNumber: true
  },
  mjpegServerPort: {
    isNumber: true
  },
  mjpegScreenshotUrl: {
    isString: true
  },
  skipServerInstallation: {
    isBoolean: true
  },
  androidCoverageEndIntent: {
    isString: true
  },
  userProfile: {
    isNumber: true
  },
  appWaitForLaunch: {
    isBoolean: true
  },
  disableSuppressAccessibilityService: {
    isBoolean: true
  },
  forceAppLaunch: {
    isBoolean: true
  },
  shouldTerminateApp: {
    isBoolean: true
  }
};
let desiredCapConstraints = {};
Object.assign(desiredCapConstraints, uiautomatorCapConstraints, _appiumAndroidDriver.commonCapConstraints);
var _default = desiredCapConstraints;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYXBwaXVtQW5kcm9pZERyaXZlciIsInJlcXVpcmUiLCJ1aWF1dG9tYXRvckNhcENvbnN0cmFpbnRzIiwiYXBwIiwiaXNTdHJpbmciLCJhdXRvbWF0aW9uTmFtZSIsImJyb3dzZXJOYW1lIiwibGF1bmNoVGltZW91dCIsImlzTnVtYmVyIiwic2tpcFVubG9jayIsImlzQm9vbGVhbiIsInVpYXV0b21hdG9yMlNlcnZlckxhdW5jaFRpbWVvdXQiLCJ1aWF1dG9tYXRvcjJTZXJ2ZXJJbnN0YWxsVGltZW91dCIsInVpYXV0b21hdG9yMlNlcnZlclJlYWRUaW1lb3V0IiwiZGlzYWJsZVdpbmRvd0FuaW1hdGlvbiIsInN5c3RlbVBvcnQiLCJtanBlZ1NlcnZlclBvcnQiLCJtanBlZ1NjcmVlbnNob3RVcmwiLCJza2lwU2VydmVySW5zdGFsbGF0aW9uIiwiYW5kcm9pZENvdmVyYWdlRW5kSW50ZW50IiwidXNlclByb2ZpbGUiLCJhcHBXYWl0Rm9yTGF1bmNoIiwiZGlzYWJsZVN1cHByZXNzQWNjZXNzaWJpbGl0eVNlcnZpY2UiLCJmb3JjZUFwcExhdW5jaCIsInNob3VsZFRlcm1pbmF0ZUFwcCIsImRlc2lyZWRDYXBDb25zdHJhaW50cyIsIk9iamVjdCIsImFzc2lnbiIsImNvbW1vbkNhcENvbnN0cmFpbnRzIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9kZXNpcmVkLWNhcHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tbW9uQ2FwQ29uc3RyYWludHMgfSBmcm9tICdhcHBpdW0tYW5kcm9pZC1kcml2ZXInO1xuXG5sZXQgdWlhdXRvbWF0b3JDYXBDb25zdHJhaW50cyA9IHtcbiAgYXBwOiB7XG4gICAgaXNTdHJpbmc6IHRydWVcbiAgfSxcbiAgYXV0b21hdGlvbk5hbWU6IHtcbiAgICBpc1N0cmluZzogdHJ1ZVxuICB9LFxuICBicm93c2VyTmFtZToge1xuICAgIGlzU3RyaW5nOiB0cnVlXG4gIH0sXG4gIGxhdW5jaFRpbWVvdXQ6IHtcbiAgICBpc051bWJlcjogdHJ1ZVxuICB9LFxuICBza2lwVW5sb2NrOiB7XG4gICAgaXNCb29sZWFuOiB0cnVlXG4gIH0sXG4gIHVpYXV0b21hdG9yMlNlcnZlckxhdW5jaFRpbWVvdXQ6IHtcbiAgICBpc051bWJlcjogdHJ1ZVxuICB9LFxuICB1aWF1dG9tYXRvcjJTZXJ2ZXJJbnN0YWxsVGltZW91dDoge1xuICAgIGlzTnVtYmVyOiB0cnVlXG4gIH0sXG4gIHVpYXV0b21hdG9yMlNlcnZlclJlYWRUaW1lb3V0OiB7XG4gICAgaXNOdW1iZXI6IHRydWVcbiAgfSxcbiAgZGlzYWJsZVdpbmRvd0FuaW1hdGlvbjoge1xuICAgIGlzQm9vbGVhbjogdHJ1ZVxuICB9LFxuICBzeXN0ZW1Qb3J0OiB7XG4gICAgaXNOdW1iZXI6IHRydWVcbiAgfSxcbiAgbWpwZWdTZXJ2ZXJQb3J0OiB7XG4gICAgaXNOdW1iZXI6IHRydWVcbiAgfSxcbiAgbWpwZWdTY3JlZW5zaG90VXJsOiB7XG4gICAgaXNTdHJpbmc6IHRydWVcbiAgfSxcbiAgc2tpcFNlcnZlckluc3RhbGxhdGlvbjoge1xuICAgIGlzQm9vbGVhbjogdHJ1ZVxuICB9LFxuICBhbmRyb2lkQ292ZXJhZ2VFbmRJbnRlbnQ6IHtcbiAgICBpc1N0cmluZzogdHJ1ZVxuICB9LFxuICB1c2VyUHJvZmlsZToge1xuICAgIGlzTnVtYmVyOiB0cnVlXG4gIH0sXG4gIGFwcFdhaXRGb3JMYXVuY2g6IHtcbiAgICBpc0Jvb2xlYW46IHRydWVcbiAgfSxcbiAgZGlzYWJsZVN1cHByZXNzQWNjZXNzaWJpbGl0eVNlcnZpY2U6IHtcbiAgICBpc0Jvb2xlYW46IHRydWVcbiAgfSxcbiAgZm9yY2VBcHBMYXVuY2g6IHtcbiAgICBpc0Jvb2xlYW46IHRydWVcbiAgfSxcbiAgc2hvdWxkVGVybWluYXRlQXBwOiB7XG4gICAgaXNCb29sZWFuOiB0cnVlXG4gIH1cbn07XG5cbmxldCBkZXNpcmVkQ2FwQ29uc3RyYWludHMgPSB7fTtcbk9iamVjdC5hc3NpZ24oXG4gIGRlc2lyZWRDYXBDb25zdHJhaW50cyxcbiAgdWlhdXRvbWF0b3JDYXBDb25zdHJhaW50cyxcbiAgY29tbW9uQ2FwQ29uc3RyYWludHNcbik7XG5cbmV4cG9ydCBkZWZhdWx0IGRlc2lyZWRDYXBDb25zdHJhaW50cztcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUFBLG9CQUFBLEdBQUFDLE9BQUE7QUFFQSxJQUFJQyx5QkFBeUIsR0FBRztFQUM5QkMsR0FBRyxFQUFFO0lBQ0hDLFFBQVEsRUFBRTtFQUNaLENBQUM7RUFDREMsY0FBYyxFQUFFO0lBQ2RELFFBQVEsRUFBRTtFQUNaLENBQUM7RUFDREUsV0FBVyxFQUFFO0lBQ1hGLFFBQVEsRUFBRTtFQUNaLENBQUM7RUFDREcsYUFBYSxFQUFFO0lBQ2JDLFFBQVEsRUFBRTtFQUNaLENBQUM7RUFDREMsVUFBVSxFQUFFO0lBQ1ZDLFNBQVMsRUFBRTtFQUNiLENBQUM7RUFDREMsK0JBQStCLEVBQUU7SUFDL0JILFFBQVEsRUFBRTtFQUNaLENBQUM7RUFDREksZ0NBQWdDLEVBQUU7SUFDaENKLFFBQVEsRUFBRTtFQUNaLENBQUM7RUFDREssNkJBQTZCLEVBQUU7SUFDN0JMLFFBQVEsRUFBRTtFQUNaLENBQUM7RUFDRE0sc0JBQXNCLEVBQUU7SUFDdEJKLFNBQVMsRUFBRTtFQUNiLENBQUM7RUFDREssVUFBVSxFQUFFO0lBQ1ZQLFFBQVEsRUFBRTtFQUNaLENBQUM7RUFDRFEsZUFBZSxFQUFFO0lBQ2ZSLFFBQVEsRUFBRTtFQUNaLENBQUM7RUFDRFMsa0JBQWtCLEVBQUU7SUFDbEJiLFFBQVEsRUFBRTtFQUNaLENBQUM7RUFDRGMsc0JBQXNCLEVBQUU7SUFDdEJSLFNBQVMsRUFBRTtFQUNiLENBQUM7RUFDRFMsd0JBQXdCLEVBQUU7SUFDeEJmLFFBQVEsRUFBRTtFQUNaLENBQUM7RUFDRGdCLFdBQVcsRUFBRTtJQUNYWixRQUFRLEVBQUU7RUFDWixDQUFDO0VBQ0RhLGdCQUFnQixFQUFFO0lBQ2hCWCxTQUFTLEVBQUU7RUFDYixDQUFDO0VBQ0RZLG1DQUFtQyxFQUFFO0lBQ25DWixTQUFTLEVBQUU7RUFDYixDQUFDO0VBQ0RhLGNBQWMsRUFBRTtJQUNkYixTQUFTLEVBQUU7RUFDYixDQUFDO0VBQ0RjLGtCQUFrQixFQUFFO0lBQ2xCZCxTQUFTLEVBQUU7RUFDYjtBQUNGLENBQUM7QUFFRCxJQUFJZSxxQkFBcUIsR0FBRyxDQUFDLENBQUM7QUFDOUJDLE1BQU0sQ0FBQ0MsTUFBTSxDQUNYRixxQkFBcUIsRUFDckJ2Qix5QkFBeUIsRUFDekIwQix5Q0FDRixDQUFDO0FBQUMsSUFBQUMsUUFBQSxHQUVhSixxQkFBcUI7QUFBQUssT0FBQSxDQUFBQyxPQUFBLEdBQUFGLFFBQUEifQ==