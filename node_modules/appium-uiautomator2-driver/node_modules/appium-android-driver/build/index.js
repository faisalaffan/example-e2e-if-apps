#!/usr/bin/env node
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SETTINGS_HELPER_PKG_ID = exports.CHROMIUM_WIN = exports.WEBVIEW_BASE = exports.WEBVIEW_WIN = exports.NATIVE_WIN = exports.webviewHelpers = exports.commonCapConstraints = exports.AndroidDriver = exports.androidCommands = exports.androidHelpers = void 0;
const source_map_support_1 = require("source-map-support");
(0, source_map_support_1.install)();
const driver = __importStar(require("./lib/driver"));
const androidHelperIndex = __importStar(require("./lib/android-helpers"));
const commandIndex = __importStar(require("./lib/commands/index"));
const webview = __importStar(require("./lib/webview-helpers"));
const caps = __importStar(require("./lib/desired-caps"));
const { AndroidDriver } = driver;
exports.AndroidDriver = AndroidDriver;
const { helpers: webviewHelpers, NATIVE_WIN, WEBVIEW_WIN, WEBVIEW_BASE, CHROMIUM_WIN } = webview;
exports.webviewHelpers = webviewHelpers;
exports.NATIVE_WIN = NATIVE_WIN;
exports.WEBVIEW_WIN = WEBVIEW_WIN;
exports.WEBVIEW_BASE = WEBVIEW_BASE;
exports.CHROMIUM_WIN = CHROMIUM_WIN;
const { commonCapConstraints } = caps;
exports.commonCapConstraints = commonCapConstraints;
const { commands: androidCommands } = commandIndex;
exports.androidCommands = androidCommands;
const { helpers: androidHelpers, SETTINGS_HELPER_PKG_ID } = androidHelperIndex;
exports.androidHelpers = androidHelpers;
exports.SETTINGS_HELPER_PKG_ID = SETTINGS_HELPER_PKG_ID;
exports.default = AndroidDriver;
//# sourceMappingURL=index.js.map