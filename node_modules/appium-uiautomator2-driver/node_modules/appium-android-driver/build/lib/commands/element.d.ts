export default extensions;
export namespace commands {
    function getAttribute(attribute: any, elementId: any): Promise<any>;
    function getName(elementId: any): Promise<any>;
    function elementDisplayed(elementId: any): Promise<boolean>;
    function elementEnabled(elementId: any): Promise<boolean>;
    function elementSelected(elementId: any): Promise<boolean>;
    function setValue(keys: any, elementId: any): Promise<any>;
    function replaceValue(keys: any, elementId: any): Promise<any>;
    function setValueImmediate(keys: any, elementId: any): Promise<void>;
    function getText(elementId: any): Promise<any>;
    function clear(elementId: any): Promise<void | null>;
    function click(elementId: any): Promise<any>;
    function getLocation(elementId: any): Promise<any>;
    function getLocationInView(elementId: any): Promise<any>;
    function getSize(elementId: any): Promise<any>;
    function getElementRect(elementId: any): Promise<any>;
    function touchLongClick(elementId: any, x: any, y: any, duration: any): Promise<any>;
    function touchDown(elementId: any, x: any, y: any): Promise<any>;
    function touchUp(elementId: any, x: any, y: any): Promise<any>;
    function touchMove(elementId: any, x: any, y: any): Promise<any>;
    function complexTap(tapCount: any, touchCount: any, duration: any, x: any, y: any): Promise<any>;
    function tap(elementId?: null, x?: null, y?: null, count?: number): Promise<void>;
}
export namespace helpers {
    function setElementValue(keys: any, elementId: any, replace?: boolean): Promise<any>;
    /**
     * Reason for isolating doSetElementValue from setElementValue is for reusing setElementValue
     * across android-drivers (like appium-uiautomator2-driver) and to avoid code duplication.
     * Other android-drivers (like appium-uiautomator2-driver) need to override doSetElementValue
     * to facilitate setElementValue.
     */
    function doSetElementValue(params: any): Promise<any>;
}
declare let extensions: {};
//# sourceMappingURL=element.d.ts.map