export default extensions;
export namespace commands {
    function doTouchAction(action: any, opts?: {}): Promise<any>;
    function getSwipeOptions(gestures: any, touchCount?: number): Promise<{
        startX: any;
        startY: any;
        endX: any;
        endY: any;
        duration: number;
        touchCount: number;
        element: any;
    }>;
    function performTouch(gestures: any): Promise<any>;
    function performMultiAction(actions: any, elementId: any): Promise<any>;
    /**
     * Reason for isolating doPerformMultiAction from performMultiAction is for reusing performMultiAction
     * across android-drivers (like appium-uiautomator2-driver) and to avoid code duplication.
     * Other android-drivers (like appium-uiautomator2-driver) need to override doPerformMultiAction
     * to facilitate performMultiAction.
     */
    function doPerformMultiAction(elementId: any, states: any): Promise<any>;
}
export namespace helpers {
    function doTouchDrag(gestures: any): Promise<any>;
    function fixRelease(gestures: any): Promise<any>;
    function performGesture(gesture: any): Promise<any>;
    function parseTouch(gestures: any, multi: any): Promise<any[]>;
}
declare let extensions: {};
//# sourceMappingURL=touch.d.ts.map