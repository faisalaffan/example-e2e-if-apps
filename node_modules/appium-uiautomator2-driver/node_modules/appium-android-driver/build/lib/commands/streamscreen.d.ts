export default commands;
export type StartScreenStreamingOptions = {
    /**
     * - The scaled width of the device's screen. If unset then the script will assign it
     * to the actual screen width measured in pixels.
     */
    width: number | null;
    /**
     * - The scaled height of the device's screen. If unset then the script will assign it
     * to the actual screen height measured in pixels.
     */
    height: number | null;
    /**
     * - The video bit rate for the video, in bits per second.
     * The default value is 4000000 (4 Mb/s). You can increase the bit rate to improve video quality,
     * but doing so results in larger movie files.
     */
    bitRate: number | null;
    /**
     * [127.0.0.1] - The IP address/host name to start the MJPEG server on.
     * You can set it to `0.0.0.0` to trigger the broadcast on all available network interfaces.
     */
    host: string | null;
    /**
     * - The HTTP request path the MJPEG server should be available on.
     * If unset then any pathname on the given `host`/`port` combination will work. Note that the value
     * should always start with a single slash: `/`
     */
    pathname: string | null;
    /**
     * [8094] - The port number to start the internal TCP MJPEG broadcast on.
     * This type of broadcast always starts on the loopback interface (`127.0.0.1`).
     */
    tcpPort: number | null;
    /**
     * [8093] - The port number to start the MJPEG server on.
     */
    port: number | null;
    /**
     * [70] - The quality value for the streamed JPEG images.
     * This number should be in range [1, 100], where 100 is the best quality.
     */
    quality: number | null;
    /**
     * [false] - If set to `true` then GStreamer pipeline will
     * increase the dimensions of the resulting images to properly fit images in both landscape and
     * portrait orientations. Set it to `true` if the device rotation is not going to be the same during the
     * broadcasting session.
     */
    considerRotation: boolean | null;
    /**
     * [false] - Whether to log GStreamer pipeline events into
     * the standard log output. Might be useful for debugging purposes.
     */
    logPipelineDetails: boolean | null;
};
declare namespace commands {
    /**
     * @typedef {Object} StartScreenStreamingOptions
     *
     * @property {?number} width - The scaled width of the device's screen. If unset then the script will assign it
     * to the actual screen width measured in pixels.
     * @property {?number} height - The scaled height of the device's screen. If unset then the script will assign it
     * to the actual screen height measured in pixels.
     * @property {?number} bitRate - The video bit rate for the video, in bits per second.
     * The default value is 4000000 (4 Mb/s). You can increase the bit rate to improve video quality,
     * but doing so results in larger movie files.
     * @property {?string} host [127.0.0.1] - The IP address/host name to start the MJPEG server on.
     * You can set it to `0.0.0.0` to trigger the broadcast on all available network interfaces.
     * @property {?string} pathname - The HTTP request path the MJPEG server should be available on.
     * If unset then any pathname on the given `host`/`port` combination will work. Note that the value
     * should always start with a single slash: `/`
     * @property {?number} tcpPort [8094] - The port number to start the internal TCP MJPEG broadcast on.
     * This type of broadcast always starts on the loopback interface (`127.0.0.1`).
     * @property {?number} port [8093] - The port number to start the MJPEG server on.
     * @property {?number} quality [70] - The quality value for the streamed JPEG images.
     * This number should be in range [1, 100], where 100 is the best quality.
     * @property {?boolean} considerRotation [false] - If set to `true` then GStreamer pipeline will
     * increase the dimensions of the resulting images to properly fit images in both landscape and
     * portrait orientations. Set it to `true` if the device rotation is not going to be the same during the
     * broadcasting session.
     * @property {?boolean} logPipelineDetails [false] - Whether to log GStreamer pipeline events into
     * the standard log output. Might be useful for debugging purposes.
     */
    /**
     * Starts device screen broadcast by creating MJPEG server.
     * Multiple calls to this method have no effect unless the previous streaming
     * session is stopped.
     * This method only works if the `adb_screen_streaming` feature is
     * enabled on the server side.
     *
     * @param {?StartScreenStreamingOptions} options - The available options.
     * @throws {Error} If screen streaming has failed to start or
     * is not supported on the host system or
     * the corresponding server feature is not enabled.
     */
    function mobileStartScreenStreaming(options?: StartScreenStreamingOptions | null): Promise<void>;
    /**
     * Stop screen streaming.
     * If no screen streaming server has been started then nothing is done.
     */
    function mobileStopScreenStreaming(): Promise<void>;
}
//# sourceMappingURL=streamscreen.d.ts.map