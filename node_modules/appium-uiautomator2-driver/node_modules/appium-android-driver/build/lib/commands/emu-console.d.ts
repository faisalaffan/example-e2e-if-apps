export default commands;
export type ExecOptions = {
    /**
     * - The actual command to execute. See
     * https://developer.android.com/studio/run/emulator-console for more details
     * on available commands
     */
    command: Array<string> | string;
    /**
     * [60000] A timeout used to wait for a server
     * reply to the given command in milliseconds
     */
    execTimeout: number;
    /**
     * [5000] Console connection timeout in milliseconds
     */
    connTimeout: number;
    /**
     * [5000] Telnet console initialization timeout
     * in milliseconds (the time between the connection happens and the command prompt
     * is available)
     */
    initTimeout: number;
};
export namespace commands {
    /**
     * @typedef {Object} ExecOptions
     * @property {!Array<string>|string} command - The actual command to execute. See
     * https://developer.android.com/studio/run/emulator-console for more details
     * on available commands
     * @property {number} execTimeout [60000] A timeout used to wait for a server
     * reply to the given command in milliseconds
     * @property {number} connTimeout [5000] Console connection timeout in milliseconds
     * @property {number} initTimeout [5000] Telnet console initialization timeout
     * in milliseconds (the time between the connection happens and the command prompt
     * is available)
     */
    /**
     * Executes a command through emulator telnet console interface and returns its output.
     * The `emulator_console` server feature must be enabled in order to use this method.
     *
     * @param {ExecOptions} opts
     * @returns {string} The command output
     * @throws {Error} If there was an error while connecting to the Telnet console
     * or if the given command returned non-OK response
     */
    function mobileExecEmuConsoleCommand(opts?: ExecOptions): string;
}
//# sourceMappingURL=emu-console.d.ts.map