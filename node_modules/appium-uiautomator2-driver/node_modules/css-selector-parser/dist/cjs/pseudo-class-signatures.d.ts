import { PseudoClassType } from './syntax-definitions.js';
export type PseudoClassSignature = {
    optional: boolean;
} & ({
    type: 'Formula';
    ofSelector?: boolean;
} | {
    type: 'String';
} | {
    type: 'Selector';
});
export type PseudoClassSignatures = Record<string, PseudoClassSignature>;
export declare const emptyPseudoClassSignatures: PseudoClassSignatures;
export declare const defaultPseudoClassSignature: PseudoClassSignature;
export type CategoriesIndex<T1 extends string, T2 extends string> = {
    [K in T1]?: T2[];
};
export declare function inverseCategories<T1 extends string, T2 extends string>(obj: CategoriesIndex<T1, T2>): CategoriesIndex<T2, T1>;
export declare function calculatePseudoClassSignatures(definitions: {
    [K in PseudoClassType]?: string[];
}): PseudoClassSignatures;
